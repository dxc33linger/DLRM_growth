2020-11-05 14:24:04,686   ******************************************************
2020-11-05 14:24:04,686                     dlrm_s_pytorch.py                   
2020-11-05 14:24:04,686   args = Namespace(activation_function='relu', arch_embedding_size='4-3-2', arch_interaction_itself=False, arch_interaction_op='dot', arch_mlp_bot='13-64-32-33-16', arch_mlp_top='64-32-1', arch_sparse_feature_size=16, data_generation='dataset', data_randomize='total', data_set='kaggle', data_size=1, data_sub_sample_rate=0.0, data_trace_enable_padding=False, data_trace_file='./input/dist_emb_j.log', dataset_multiprocessing=False, debug_mode=False, enable_profiling=False, gpu_id='0', grow_embedding=True, growth_step=100, inference_only=False, initialization='random', learning_rate=0.1, load_model='', loss_function='bce', loss_threshold=0.0, loss_weights='1.0-1.0', lr_decay_start_step=0, lr_num_decay_steps=0, lr_num_warmup_steps=0, max_ind_range=-1, md_flag=False, md_round_dims=False, md_temperature=0.3, md_threshold=200, memory_map=False, mini_batch_size=64, mlperf_acc_threshold=0.0, mlperf_auc_threshold=0.0, mlperf_bin_loader=False, mlperf_bin_shuffle=False, mlperf_logging=False, nepochs=1, num_batches=0, num_indices_per_lookup=10, num_indices_per_lookup_fixed=False, num_workers=0, numpy_rand_seed=123, plot_compute_graph=False, print_freq=1024, print_precision=5, print_time=False, processed_data_file='./input/kaggleAdDisplayChallenge_processed.npz', qr_collisions=4, qr_flag=False, qr_operation='mult', qr_threshold=200, raw_data_file='./input/train.txt', round_targets=True, save_model='', save_onnx=False, size_scale=1, sync_dense_params=True, test_freq=80000, test_mini_batch_size=16384, test_num_workers=-16, use_gpu=True)
2020-11-05 14:24:04,696   dataset kaggle #day 2
2020-11-05 14:24:04,696   Reading pre-processed data=./input/kaggleAdDisplayChallenge_processed.npz
2020-11-05 14:24:33,194   Sparse fea = 26, Dense fea = 13
2020-11-05 14:24:33,256   Defined train indices...
2020-11-05 14:24:33,765   Randomized indices across days ...
2020-11-05 14:24:43,920   Split data according to indices...
2020-11-05 14:24:43,921   dataset kaggle #day 2
2020-11-05 14:24:43,921   Reading pre-processed data=./input/kaggleAdDisplayChallenge_processed.npz
2020-11-05 14:25:12,477   Sparse fea = 26, Dense fea = 13
2020-11-05 14:25:12,542   Defined test indices...
2020-11-05 14:25:13,055   Randomized indices across days ...
2020-11-05 14:25:26,857   Split data according to indices...
2020-11-05 14:25:26,859   m_spa=16, ln_emb=[    1460      583 10131227  2202608      305       24    12517      633
        3    93145     5683  8351593     3194       27    14992  5461306
       10     5652     2173        4  7046547       18       15   286181
      105   142572], ln_bot=[13 64 32 33 16], ln_top=[367  64  32   1]
2020-11-05 14:25:26,859   m_spa=16, ln_emb=[    1460      583 10131227  2202608      305       24    12517      633
        3    93145     5683  8351593     3194       27    14992  5461306
       10     5652     2173        4  7046547       18       15   286181
      105   142572], ln_bot=[13 64 32 33 16], ln_top=[367  64  32   1]
2020-11-05 14:25:37,047   time/loss/accuracy (if enabled):
2020-11-05 14:25:37,047   Stage 0, This growth start from input index 0
2020-11-05 14:25:48,937   Finished training it 1024/204646 of epoch 0, -1.00 ms/it, loss 0.520265, accuracy 75.655 %
2020-11-05 14:25:59,274   Finished training it 2048/204646 of epoch 0, -1.00 ms/it, loss 0.503569, accuracy 76.372 %
2020-11-05 14:26:03,137   save_model: DLRM_Net(
  (emb_l): ModuleList(
    (0): EmbeddingBag(1460, 16, mode=sum)
    (1): EmbeddingBag(583, 16, mode=sum)
    (2): EmbeddingBag(10131227, 16, mode=sum)
    (3): EmbeddingBag(2202608, 16, mode=sum)
    (4): EmbeddingBag(305, 16, mode=sum)
    (5): EmbeddingBag(24, 16, mode=sum)
    (6): EmbeddingBag(12517, 16, mode=sum)
    (7): EmbeddingBag(633, 16, mode=sum)
    (8): EmbeddingBag(3, 16, mode=sum)
    (9): EmbeddingBag(93145, 16, mode=sum)
    (10): EmbeddingBag(5683, 16, mode=sum)
    (11): EmbeddingBag(8351593, 16, mode=sum)
    (12): EmbeddingBag(3194, 16, mode=sum)
    (13): EmbeddingBag(27, 16, mode=sum)
    (14): EmbeddingBag(14992, 16, mode=sum)
    (15): EmbeddingBag(5461306, 16, mode=sum)
    (16): EmbeddingBag(10, 16, mode=sum)
    (17): EmbeddingBag(5652, 16, mode=sum)
    (18): EmbeddingBag(2173, 16, mode=sum)
    (19): EmbeddingBag(4, 16, mode=sum)
    (20): EmbeddingBag(7046547, 16, mode=sum)
    (21): EmbeddingBag(18, 16, mode=sum)
    (22): EmbeddingBag(15, 16, mode=sum)
    (23): EmbeddingBag(286181, 16, mode=sum)
    (24): EmbeddingBag(105, 16, mode=sum)
    (25): EmbeddingBag(142572, 16, mode=sum)
  )
  (bot_l): Sequential(
    (0): Linear(in_features=13, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=32, bias=True)
    (3): ReLU()
    (4): Linear(in_features=32, out_features=33, bias=True)
    (5): ReLU()
    (6): Linear(in_features=33, out_features=16, bias=True)
    (7): ReLU()
  )
  (top_l): Sequential(
    (0): Linear(in_features=367, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=32, bias=True)
    (3): ReLU()
    (4): Linear(in_features=32, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
2020-11-05 14:26:03,137   Growth ID 0, Growing from 1X to 2X.....
2020-11-05 14:26:03,138   m_spa=32, ln_emb=[    1460      583 10131227  2202608      305       24    12517      633
        3    93145     5683  8351593     3194       27    14992  5461306
       10     5652     2173        4  7046547       18       15   286181
      105   142572], ln_bot=[ 13 128  64  66  32], ln_top=[383 128  32   2]
2020-11-05 14:28:44,620   ******************************************************
2020-11-05 14:28:44,620                     dlrm_s_pytorch.py                   
2020-11-05 14:28:44,620   args = Namespace(activation_function='relu', arch_embedding_size='4-3-2', arch_interaction_itself=False, arch_interaction_op='dot', arch_mlp_bot='13-64-32-33-16', arch_mlp_top='64-32-1', arch_sparse_feature_size=16, data_generation='dataset', data_randomize='total', data_set='kaggle', data_size=1, data_sub_sample_rate=0.0, data_trace_enable_padding=False, data_trace_file='./input/dist_emb_j.log', dataset_multiprocessing=False, debug_mode=False, enable_profiling=False, gpu_id='0', grow_embedding=True, growth_step=100, inference_only=False, initialization='random', learning_rate=0.1, load_model='', loss_function='bce', loss_threshold=0.0, loss_weights='1.0-1.0', lr_decay_start_step=0, lr_num_decay_steps=0, lr_num_warmup_steps=0, max_ind_range=-1, md_flag=False, md_round_dims=False, md_temperature=0.3, md_threshold=200, memory_map=False, mini_batch_size=64, mlperf_acc_threshold=0.0, mlperf_auc_threshold=0.0, mlperf_bin_loader=False, mlperf_bin_shuffle=False, mlperf_logging=False, nepochs=1, num_batches=0, num_indices_per_lookup=10, num_indices_per_lookup_fixed=False, num_workers=0, numpy_rand_seed=123, plot_compute_graph=False, print_freq=1024, print_precision=5, print_time=False, processed_data_file='./input/kaggleAdDisplayChallenge_processed.npz', qr_collisions=4, qr_flag=False, qr_operation='mult', qr_threshold=200, raw_data_file='./input/train.txt', round_targets=True, save_model='', save_onnx=False, size_scale=1, sync_dense_params=True, test_freq=80000, test_mini_batch_size=16384, test_num_workers=-16, use_gpu=True)
2020-11-05 14:28:44,629   dataset kaggle #day 2
2020-11-05 14:28:44,629   Reading pre-processed data=./input/kaggleAdDisplayChallenge_processed.npz
2020-11-05 14:29:13,146   Sparse fea = 26, Dense fea = 13
2020-11-05 14:29:13,208   Defined train indices...
2020-11-05 14:29:13,717   Randomized indices across days ...
2020-11-05 14:29:24,089   Split data according to indices...
2020-11-05 14:29:24,090   dataset kaggle #day 2
2020-11-05 14:29:24,090   Reading pre-processed data=./input/kaggleAdDisplayChallenge_processed.npz
2020-11-05 14:29:52,582   Sparse fea = 26, Dense fea = 13
2020-11-05 14:29:52,643   Defined test indices...
2020-11-05 14:29:53,154   Randomized indices across days ...
2020-11-05 14:30:07,377   Split data according to indices...
2020-11-05 14:30:07,378   m_spa=16, ln_emb=[    1460      583 10131227  2202608      305       24    12517      633
        3    93145     5683  8351593     3194       27    14992  5461306
       10     5652     2173        4  7046547       18       15   286181
      105   142572], ln_bot=[13 64 32 33 16], ln_top=[367  64  32   1]
2020-11-05 14:30:07,379   m_spa=16, ln_emb=[    1460      583 10131227  2202608      305       24    12517      633
        3    93145     5683  8351593     3194       27    14992  5461306
       10     5652     2173        4  7046547       18       15   286181
      105   142572], ln_bot=[13 64 32 33 16], ln_top=[367  64  32   1]
2020-11-05 14:30:17,728   time/loss/accuracy (if enabled):
2020-11-05 14:30:17,728   Stage 0, This growth start from input index 0
2020-11-05 14:34:45,829   ******************************************************
2020-11-05 14:34:45,829                     dlrm_s_pytorch.py                   
2020-11-05 14:34:45,829   args = Namespace(activation_function='relu', arch_embedding_size='4-3-2', arch_interaction_itself=False, arch_interaction_op='dot', arch_mlp_bot='13-64-32-33-16', arch_mlp_top='64-32-1', arch_sparse_feature_size=16, data_generation='dataset', data_randomize='total', data_set='kaggle', data_size=1, data_sub_sample_rate=0.0, data_trace_enable_padding=False, data_trace_file='./input/dist_emb_j.log', dataset_multiprocessing=False, debug_mode=False, enable_profiling=False, gpu_id='0', grow_embedding=True, growth_step=100, inference_only=False, initialization='random', learning_rate=0.1, load_model='', loss_function='bce', loss_threshold=0.0, loss_weights='1.0-1.0', lr_decay_start_step=0, lr_num_decay_steps=0, lr_num_warmup_steps=0, max_ind_range=-1, md_flag=False, md_round_dims=False, md_temperature=0.3, md_threshold=200, memory_map=False, mini_batch_size=64, mlperf_acc_threshold=0.0, mlperf_auc_threshold=0.0, mlperf_bin_loader=False, mlperf_bin_shuffle=False, mlperf_logging=False, nepochs=1, num_batches=0, num_indices_per_lookup=10, num_indices_per_lookup_fixed=False, num_workers=0, numpy_rand_seed=123, plot_compute_graph=False, print_freq=1024, print_precision=5, print_time=False, processed_data_file='./input/kaggleAdDisplayChallenge_processed.npz', qr_collisions=4, qr_flag=False, qr_operation='mult', qr_threshold=200, raw_data_file='./input/train.txt', round_targets=True, save_model='', save_onnx=False, size_scale=1, sync_dense_params=True, test_freq=80000, test_mini_batch_size=16384, test_num_workers=-16, use_gpu=True)
2020-11-05 14:34:45,838   dataset kaggle #day 2
2020-11-05 14:34:45,838   Reading pre-processed data=./input/kaggleAdDisplayChallenge_processed.npz
2020-11-05 14:35:14,344   Sparse fea = 26, Dense fea = 13
2020-11-05 14:35:14,405   Defined train indices...
2020-11-05 14:35:14,922   Randomized indices across days ...
2020-11-05 14:35:24,839   Split data according to indices...
2020-11-05 14:35:24,840   dataset kaggle #day 2
2020-11-05 14:35:24,840   Reading pre-processed data=./input/kaggleAdDisplayChallenge_processed.npz
2020-11-05 14:35:53,292   Sparse fea = 26, Dense fea = 13
2020-11-05 14:35:53,354   Defined test indices...
2020-11-05 14:35:53,924   Randomized indices across days ...
2020-11-05 14:36:07,626   Split data according to indices...
2020-11-05 14:36:07,628   m_spa=16, ln_emb=[    1460      583 10131227  2202608      305       24    12517      633
        3    93145     5683  8351593     3194       27    14992  5461306
       10     5652     2173        4  7046547       18       15   286181
      105   142572], ln_bot=[13 64 32 33 16], ln_top=[367  64  32   1]
2020-11-05 14:36:07,628   m_spa=16, ln_emb=[    1460      583 10131227  2202608      305       24    12517      633
        3    93145     5683  8351593     3194       27    14992  5461306
       10     5652     2173        4  7046547       18       15   286181
      105   142572], ln_bot=[13 64 32 33 16], ln_top=[367  64  32   1]
2020-11-05 14:36:17,836   time/loss/accuracy (if enabled):
2020-11-05 14:36:17,837   Stage 0, This growth start from input index 0
2020-11-05 14:36:29,729   Finished training it 1024/204646 of epoch 0, -1.00 ms/it, loss 0.520265, accuracy 75.655 %
2020-11-05 14:36:40,400   Finished training it 2048/204646 of epoch 0, -1.00 ms/it, loss 0.503611, accuracy 76.352 %
2020-11-05 14:36:44,263   save_model: DLRM_Net(
  (emb_l): ModuleList(
    (0): EmbeddingBag(1460, 16, mode=sum)
    (1): EmbeddingBag(583, 16, mode=sum)
    (2): EmbeddingBag(10131227, 16, mode=sum)
    (3): EmbeddingBag(2202608, 16, mode=sum)
    (4): EmbeddingBag(305, 16, mode=sum)
    (5): EmbeddingBag(24, 16, mode=sum)
    (6): EmbeddingBag(12517, 16, mode=sum)
    (7): EmbeddingBag(633, 16, mode=sum)
    (8): EmbeddingBag(3, 16, mode=sum)
    (9): EmbeddingBag(93145, 16, mode=sum)
    (10): EmbeddingBag(5683, 16, mode=sum)
    (11): EmbeddingBag(8351593, 16, mode=sum)
    (12): EmbeddingBag(3194, 16, mode=sum)
    (13): EmbeddingBag(27, 16, mode=sum)
    (14): EmbeddingBag(14992, 16, mode=sum)
    (15): EmbeddingBag(5461306, 16, mode=sum)
    (16): EmbeddingBag(10, 16, mode=sum)
    (17): EmbeddingBag(5652, 16, mode=sum)
    (18): EmbeddingBag(2173, 16, mode=sum)
    (19): EmbeddingBag(4, 16, mode=sum)
    (20): EmbeddingBag(7046547, 16, mode=sum)
    (21): EmbeddingBag(18, 16, mode=sum)
    (22): EmbeddingBag(15, 16, mode=sum)
    (23): EmbeddingBag(286181, 16, mode=sum)
    (24): EmbeddingBag(105, 16, mode=sum)
    (25): EmbeddingBag(142572, 16, mode=sum)
  )
  (bot_l): Sequential(
    (0): Linear(in_features=13, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=32, bias=True)
    (3): ReLU()
    (4): Linear(in_features=32, out_features=33, bias=True)
    (5): ReLU()
    (6): Linear(in_features=33, out_features=16, bias=True)
    (7): ReLU()
  )
  (top_l): Sequential(
    (0): Linear(in_features=367, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=32, bias=True)
    (3): ReLU()
    (4): Linear(in_features=32, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
2020-11-05 14:36:44,263   Growth ID 0, Growing from 1X to 2X.....
2020-11-05 14:36:44,264   m_spa=32, ln_emb=[    1460      583 10131227  2202608      305       24    12517      633
        3    93145     5683  8351593     3194       27    14992  5461306
       10     5652     2173        4  7046547       18       15   286181
      105   142572], ln_bot=[ 13 128  64  66  32], ln_top=[383 128  64   1]
2020-11-05 14:37:05,705   load_model: Loading ./saved_model/model_after_growth0.pickle....
2020-11-05 14:38:27,116   ******************************************************
2020-11-05 14:38:27,116                     dlrm_s_pytorch.py                   
2020-11-05 14:38:27,116   args = Namespace(activation_function='relu', arch_embedding_size='4-3-2', arch_interaction_itself=False, arch_interaction_op='dot', arch_mlp_bot='13-64-32-33-16', arch_mlp_top='64-32-1', arch_sparse_feature_size=16, data_generation='dataset', data_randomize='total', data_set='kaggle', data_size=1, data_sub_sample_rate=0.0, data_trace_enable_padding=False, data_trace_file='./input/dist_emb_j.log', dataset_multiprocessing=False, debug_mode=False, enable_profiling=False, gpu_id='0', grow_embedding=True, growth_step=100, inference_only=False, initialization='random', learning_rate=0.1, load_model='', loss_function='bce', loss_threshold=0.0, loss_weights='1.0-1.0', lr_decay_start_step=0, lr_num_decay_steps=0, lr_num_warmup_steps=0, max_ind_range=-1, md_flag=False, md_round_dims=False, md_temperature=0.3, md_threshold=200, memory_map=False, mini_batch_size=64, mlperf_acc_threshold=0.0, mlperf_auc_threshold=0.0, mlperf_bin_loader=False, mlperf_bin_shuffle=False, mlperf_logging=False, nepochs=1, num_batches=0, num_indices_per_lookup=10, num_indices_per_lookup_fixed=False, num_workers=0, numpy_rand_seed=123, plot_compute_graph=False, print_freq=1024, print_precision=5, print_time=False, processed_data_file='./input/kaggleAdDisplayChallenge_processed.npz', qr_collisions=4, qr_flag=False, qr_operation='mult', qr_threshold=200, raw_data_file='./input/train.txt', round_targets=True, save_model='', save_onnx=False, size_scale=1, sync_dense_params=True, test_freq=80000, test_mini_batch_size=16384, test_num_workers=-16, use_gpu=True)
2020-11-05 14:38:27,125   dataset kaggle #day 2
2020-11-05 14:38:27,125   Reading pre-processed data=./input/kaggleAdDisplayChallenge_processed.npz
2020-11-05 14:38:55,646   Sparse fea = 26, Dense fea = 13
2020-11-05 14:38:55,708   Defined train indices...
2020-11-05 14:38:56,217   Randomized indices across days ...
2020-11-05 14:39:07,003   Split data according to indices...
2020-11-05 14:39:07,004   dataset kaggle #day 2
2020-11-05 14:39:07,004   Reading pre-processed data=./input/kaggleAdDisplayChallenge_processed.npz
2020-11-05 14:39:35,530   Sparse fea = 26, Dense fea = 13
2020-11-05 14:39:35,592   Defined test indices...
2020-11-05 14:39:36,102   Randomized indices across days ...
2020-11-05 14:39:51,248   Split data according to indices...
2020-11-05 14:39:51,250   m_spa=16, ln_emb=[    1460      583 10131227  2202608      305       24    12517      633
        3    93145     5683  8351593     3194       27    14992  5461306
       10     5652     2173        4  7046547       18       15   286181
      105   142572], ln_bot=[13 64 32 33 16], ln_top=[367  64  32   1]
2020-11-05 14:39:51,250   m_spa=16, ln_emb=[    1460      583 10131227  2202608      305       24    12517      633
        3    93145     5683  8351593     3194       27    14992  5461306
       10     5652     2173        4  7046547       18       15   286181
      105   142572], ln_bot=[13 64 32 33 16], ln_top=[367  64  32   1]
2020-11-05 14:40:48,450   ******************************************************
2020-11-05 14:40:48,450                     dlrm_s_pytorch.py                   
2020-11-05 14:40:48,450   args = Namespace(activation_function='relu', arch_embedding_size='4-3-2', arch_interaction_itself=False, arch_interaction_op='dot', arch_mlp_bot='13-64-32-33-16', arch_mlp_top='64-32-1', arch_sparse_feature_size=16, data_generation='dataset', data_randomize='total', data_set='kaggle', data_size=1, data_sub_sample_rate=0.0, data_trace_enable_padding=False, data_trace_file='./input/dist_emb_j.log', dataset_multiprocessing=False, debug_mode=False, enable_profiling=False, gpu_id='0', grow_embedding=True, growth_step=100, inference_only=False, initialization='random', learning_rate=0.1, load_model='', loss_function='bce', loss_threshold=0.0, loss_weights='1.0-1.0', lr_decay_start_step=0, lr_num_decay_steps=0, lr_num_warmup_steps=0, max_ind_range=-1, md_flag=False, md_round_dims=False, md_temperature=0.3, md_threshold=200, memory_map=False, mini_batch_size=64, mlperf_acc_threshold=0.0, mlperf_auc_threshold=0.0, mlperf_bin_loader=False, mlperf_bin_shuffle=False, mlperf_logging=False, nepochs=1, num_batches=0, num_indices_per_lookup=10, num_indices_per_lookup_fixed=False, num_workers=0, numpy_rand_seed=123, plot_compute_graph=False, print_freq=1024, print_precision=5, print_time=False, processed_data_file='./input/kaggleAdDisplayChallenge_processed.npz', qr_collisions=4, qr_flag=False, qr_operation='mult', qr_threshold=200, raw_data_file='./input/train.txt', round_targets=True, save_model='', save_onnx=False, size_scale=1, sync_dense_params=True, test_freq=80000, test_mini_batch_size=16384, test_num_workers=-16, use_gpu=True)
2020-11-05 14:40:48,459   dataset kaggle #day 2
2020-11-05 14:40:48,459   Reading pre-processed data=./input/kaggleAdDisplayChallenge_processed.npz
2020-11-05 14:41:17,070   Sparse fea = 26, Dense fea = 13
2020-11-05 14:41:17,132   Defined train indices...
2020-11-05 14:41:17,641   Randomized indices across days ...
2020-11-05 14:41:28,015   Split data according to indices...
2020-11-05 14:41:28,016   dataset kaggle #day 2
2020-11-05 14:41:28,017   Reading pre-processed data=./input/kaggleAdDisplayChallenge_processed.npz
2020-11-05 14:41:56,515   Sparse fea = 26, Dense fea = 13
2020-11-05 14:41:56,577   Defined test indices...
2020-11-05 14:41:57,086   Randomized indices across days ...
2020-11-05 14:42:10,924   Split data according to indices...
2020-11-05 14:42:10,926   m_spa=16, ln_emb=[    1460      583 10131227  2202608      305       24    12517      633
        3    93145     5683  8351593     3194       27    14992  5461306
       10     5652     2173        4  7046547       18       15   286181
      105   142572], ln_bot=[13 64 32 33 16], ln_top=[367  64  32   1]
2020-11-05 14:42:10,926   m_spa=16, ln_emb=[    1460      583 10131227  2202608      305       24    12517      633
        3    93145     5683  8351593     3194       27    14992  5461306
       10     5652     2173        4  7046547       18       15   286181
      105   142572], ln_bot=[13 64 32 33 16], ln_top=[367  64  32   1]
2020-11-05 14:45:55,737   ******************************************************
2020-11-05 14:45:55,737                     dlrm_s_pytorch.py                   
2020-11-05 14:45:55,737   args = Namespace(activation_function='relu', arch_embedding_size='4-3-2', arch_interaction_itself=False, arch_interaction_op='dot', arch_mlp_bot='13-64-32-33-16', arch_mlp_top='64-32-1', arch_sparse_feature_size=16, data_generation='dataset', data_randomize='total', data_set='kaggle', data_size=1, data_sub_sample_rate=0.0, data_trace_enable_padding=False, data_trace_file='./input/dist_emb_j.log', dataset_multiprocessing=False, debug_mode=False, enable_profiling=False, gpu_id='0', grow_embedding=False, growth_step=100, inference_only=False, initialization='random', learning_rate=0.1, load_model='', loss_function='bce', loss_threshold=0.0, loss_weights='1.0-1.0', lr_decay_start_step=0, lr_num_decay_steps=0, lr_num_warmup_steps=0, max_ind_range=-1, md_flag=False, md_round_dims=False, md_temperature=0.3, md_threshold=200, memory_map=False, mini_batch_size=64, mlperf_acc_threshold=0.0, mlperf_auc_threshold=0.0, mlperf_bin_loader=False, mlperf_bin_shuffle=False, mlperf_logging=False, nepochs=1, num_batches=0, num_indices_per_lookup=10, num_indices_per_lookup_fixed=False, num_workers=0, numpy_rand_seed=123, plot_compute_graph=False, print_freq=1024, print_precision=5, print_time=False, processed_data_file='./input/kaggleAdDisplayChallenge_processed.npz', qr_collisions=4, qr_flag=False, qr_operation='mult', qr_threshold=200, raw_data_file='./input/train.txt', round_targets=True, save_model='', save_onnx=False, size_scale=1, sync_dense_params=True, test_freq=80000, test_mini_batch_size=16384, test_num_workers=-16, use_gpu=True)
2020-11-05 14:45:55,746   dataset kaggle #day 2
2020-11-05 14:45:55,746   Reading pre-processed data=./input/kaggleAdDisplayChallenge_processed.npz
2020-11-05 14:46:24,310   Sparse fea = 26, Dense fea = 13
2020-11-05 14:46:24,372   Defined train indices...
2020-11-05 14:46:24,887   Randomized indices across days ...
2020-11-05 14:46:35,263   Split data according to indices...
2020-11-05 14:46:35,264   dataset kaggle #day 2
2020-11-05 14:46:35,264   Reading pre-processed data=./input/kaggleAdDisplayChallenge_processed.npz
2020-11-05 14:47:03,751   Sparse fea = 26, Dense fea = 13
2020-11-05 14:47:03,822   Defined test indices...
2020-11-05 14:47:04,331   Randomized indices across days ...
2020-11-05 14:47:17,925   Split data according to indices...
2020-11-05 14:47:17,927   m_spa=16, ln_emb=[    1460      583 10131227  2202608      305       24    12517      633
        3    93145     5683  8351593     3194       27    14992  5461306
       10     5652     2173        4  7046547       18       15   286181
      105   142572], ln_bot=[13 64 32 33 16], ln_top=[367  64  32   1]
2020-11-05 14:47:17,927   m_spa=16, ln_emb=[    1460      583 10131227  2202608      305       24    12517      633
        3    93145     5683  8351593     3194       27    14992  5461306
       10     5652     2173        4  7046547       18       15   286181
      105   142572], ln_bot=[13 64 32 33 16], ln_top=[367  64  32   1]
2020-11-05 14:47:28,167   time/loss/accuracy (if enabled):
2020-11-05 14:47:28,167   Stage 0, This growth start from input index 0
2020-11-05 14:47:39,912   Finished training it 1024/204646 of epoch 0, -1.00 ms/it, loss 0.520236, accuracy 75.679 %
2020-11-05 14:47:50,142   Finished training it 2048/204646 of epoch 0, -1.00 ms/it, loss 0.503260, accuracy 76.396 %
2020-11-05 14:47:53,998   save_model: DLRM_Net(
  (emb_l): ModuleList(
    (0): EmbeddingBag(1460, 16, mode=sum)
    (1): EmbeddingBag(583, 16, mode=sum)
    (2): EmbeddingBag(10131227, 16, mode=sum)
    (3): EmbeddingBag(2202608, 16, mode=sum)
    (4): EmbeddingBag(305, 16, mode=sum)
    (5): EmbeddingBag(24, 16, mode=sum)
    (6): EmbeddingBag(12517, 16, mode=sum)
    (7): EmbeddingBag(633, 16, mode=sum)
    (8): EmbeddingBag(3, 16, mode=sum)
    (9): EmbeddingBag(93145, 16, mode=sum)
    (10): EmbeddingBag(5683, 16, mode=sum)
    (11): EmbeddingBag(8351593, 16, mode=sum)
    (12): EmbeddingBag(3194, 16, mode=sum)
    (13): EmbeddingBag(27, 16, mode=sum)
    (14): EmbeddingBag(14992, 16, mode=sum)
    (15): EmbeddingBag(5461306, 16, mode=sum)
    (16): EmbeddingBag(10, 16, mode=sum)
    (17): EmbeddingBag(5652, 16, mode=sum)
    (18): EmbeddingBag(2173, 16, mode=sum)
    (19): EmbeddingBag(4, 16, mode=sum)
    (20): EmbeddingBag(7046547, 16, mode=sum)
    (21): EmbeddingBag(18, 16, mode=sum)
    (22): EmbeddingBag(15, 16, mode=sum)
    (23): EmbeddingBag(286181, 16, mode=sum)
    (24): EmbeddingBag(105, 16, mode=sum)
    (25): EmbeddingBag(142572, 16, mode=sum)
  )
  (bot_l): Sequential(
    (0): Linear(in_features=13, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=32, bias=True)
    (3): ReLU()
    (4): Linear(in_features=32, out_features=33, bias=True)
    (5): ReLU()
    (6): Linear(in_features=33, out_features=16, bias=True)
    (7): ReLU()
  )
  (top_l): Sequential(
    (0): Linear(in_features=367, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=32, bias=True)
    (3): ReLU()
    (4): Linear(in_features=32, out_features=1, bias=True)
    (5): Sigmoid()
  )
)
2020-11-05 14:47:53,998   Growth ID 0, Growing from 1X to 2X.....
2020-11-05 14:47:53,999   m_spa=16, ln_emb=[    1460      583 10131227  2202608      305       24    12517      633
        3    93145     5683  8351593     3194       27    14992  5461306
       10     5652     2173        4  7046547       18       15   286181
      105   142572], ln_bot=[ 13 128  64  66  16], ln_top=[367 128  64   1]
2020-11-05 14:48:03,791   load_model: Loading ./saved_model/model_after_growth0.pickle....
